<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ts.ai.mapper.SmsConfigMapper">
    
    <resultMap type="SmsConfig" id="SmsConfigResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="type"    column="type"    />
        <result property="isUse"    column="is_use"    />
        <result property="config"    column="config"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectSmsConfigVo">
        select id, name, type, is_use, config, create_time, update_time from sms_config
    </sql>

    <select id="selectSmsConfigList" parameterType="SmsConfig" resultMap="SmsConfigResult">
        <include refid="selectSmsConfigVo"/>
        <where>  
            <if test="id != null "> and id = #{id}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="type != null  and type != ''"> and type = #{type}</if>
            <if test="isUse != null "> and is_use = #{isUse}</if>
            <if test="config != null  and config != ''"> and config = #{config}</if>
            <if test="params.beginCreateTime != null and params.beginCreateTime != '' and params.endCreateTime != null and params.endCreateTime != ''"> and create_time between #{params.beginCreateTime} and #{params.endCreateTime}</if>
            <if test="params.beginUpdateTime != null and params.beginUpdateTime != '' and params.endUpdateTime != null and params.endUpdateTime != ''"> and update_time between #{params.beginUpdateTime} and #{params.endUpdateTime}</if>
        </where>
    </select>
    
    <select id="selectSmsConfigById" parameterType="Long" resultMap="SmsConfigResult">
        <include refid="selectSmsConfigVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSmsConfig" parameterType="SmsConfig" useGeneratedKeys="true" keyProperty="id">
        insert into sms_config
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">name,</if>
            <if test="type != null and type != ''">type,</if>
            <if test="isUse != null">is_use,</if>
            <if test="config != null and config != ''">config,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">#{name},</if>
            <if test="type != null and type != ''">#{type},</if>
            <if test="isUse != null">#{isUse},</if>
            <if test="config != null and config != ''">#{config},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateSmsConfig" parameterType="SmsConfig">
        update sms_config
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="type != null and type != ''">type = #{type},</if>
            <if test="isUse != null">is_use = #{isUse},</if>
            <if test="config != null and config != ''">config = #{config},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSmsConfigById" parameterType="Long">
        delete from sms_config where id = #{id}
    </delete>

    <delete id="deleteSmsConfigByIds" parameterType="String">
        delete from sms_config where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>